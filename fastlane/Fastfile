before_all do
  setup_circle_ci
end

lane :increment_version do |options|
  latest_release = firebase_app_distribution_get_latest_release(
    app: options[:app_id].to_s
  )
  version_name = android_get_version_name(
    gradle_file: 'dev-app/android/app/build.gradle'
  )
  android_set_version_code(
    gradle_file: 'dev-app/android/app/build.gradle',
    version_code: latest_release[:buildVersion].to_i + 1
  )
  android_set_version_name(
    gradle_file: 'dev-app/android/app/build.gradle',
    version_name: "#{version_name}_#{options[:version_suffix]}"
  )
end

lane :publish_to_firebase do |options|
  commit = last_git_commit
  build_notes = "Notes: #{commit[:message]}. Built by #{commit[:author]}"

  # Upload build to Firebase
  firebase_app_distribution(
    app: options[:app_id].to_s,
    # uncomment groups to send an email on every deploy
    # groups: 'terminal-qa',
    release_notes: build_notes,
    apk_path: 'dev-app/android/app/build/outputs/apk/release/app-release.apk',
    firebase_cli_token: options[:firebase_token].to_s
  )
end

lane :publish_ios_to_testflight do |options|

  match(app_identifier: ["com.stripe.terminal.reactnative.dev.app", "com.stripe.terminal.reactnative.dev.app.usb-driver"])

  target_build_number = latest_testflight_build_number(
    app_identifier: "com.stripe.terminal.reactnative.dev.app"
  ) + 1

  increment_build_number(
    build_number: target_build_number,
    xcodeproj: "dev-app/ios/StripeTerminalReactNativeDevApp.xcodeproj"
  )

  # gym builds, packages, and signs the iOS app
  gym(
    configuration: "Release",
    scheme: "StripeTerminalReactNativeDevApp",
    workspace: "dev-app/ios/StripeTerminalReactNativeDevApp.xcworkspace"
  )

  # pilot submits the app to testflight
  pilot(
    app_identifier: "com.stripe.terminal.reactnative.dev.app",
    skip_submission: true,
    distribute_external: false,
    skip_waiting_for_build_processing: true
  )

  # Reset build number to 1
  increment_build_number(
    build_number: 1,
    xcodeproj: "dev-app/ios/StripeTerminalReactNativeDevApp.xcodeproj"
  )

  clean_build_artifacts
end



